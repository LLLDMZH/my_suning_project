package com.suning.manager.service.common;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import redis.clients.jedis.ShardedJedis;
import redis.clients.jedis.ShardedJedisPool;

@Service
public class RedisService {
	
	@Autowired
	private ShardedJedisPool pool;
	
	
	@SuppressWarnings("unused")
	private <T> T execute(Function<T, ShardedJedis> fun) {
		ShardedJedis shardedJedis = null;
		try {
			shardedJedis = pool.getResource();
			return fun.callback(shardedJedis);
		} finally {
			if (null != shardedJedis) {
				shardedJedis.close();
			}
		}
	}
	
	/**
	 * 设置 KV 
	 * @param key
	 * @param value
	 * @return
	 */
	public String set(final String key, final String value) {
		return this.execute(new Function<String, ShardedJedis>() {
			@Override
			public String callback(ShardedJedis e) {
				return e.set(key, value);
			}
		});
	}

	
	public String get(String key) {
		ShardedJedis shardedJedis = null;
		try {
			shardedJedis = pool.getResource();
			return shardedJedis.get(key);
		} finally {
			if (null != shardedJedis) {
				shardedJedis.close();
			}
		}
	}
}
