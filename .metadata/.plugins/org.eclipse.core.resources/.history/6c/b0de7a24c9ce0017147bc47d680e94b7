package com.suning.web.service;

import java.io.IOException;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.suning.common.service.RedisService;
import com.suning.facade.manager.entity.ItemDescription;
import com.suning.facade.manager.entity.ItemParamData;
import com.suning.facade.manager.pojo.vo.ItemVo;

@Service
public class ItemService {


	@Autowired
	private ApiService apiService;
	
	@Value("${SUNING_MANAGER_URL}")
	private String SUNING_MANAGER_URL;
	
	@Autowired
	private RedisService redisService;
	
	
	private static final String KEY = "SUNING_WEB_ITEM_DETAIL_";
	
	private static final int REDIS_TIME = 60 * 60 * 24;
	/**
	 * 根据商品id查询商品数据
	 * 通过后台系统提供的接口服务进行查询
	 * @param itemId
	 * @return
	 */
	public ItemVo getItemById(Long itemId) {
		String key = KEY + itemId;
		//从redis中获取数据
		try {
			String cacheData = this.redisService.get(key);
			if (StringUtils.isNotEmpty(cacheData)) {
				return JSON.parseObject(cacheData, ItemVo.class);
			}
		} catch (Exception e1) {
			e1.printStackTrace();
		}

		
		String url = SUNING_MANAGER_URL + "/api/item/" + itemId;
		try {
			String jsonData = apiService.doGet(url);
			if (StringUtils.isEmpty(jsonData)) {
				return null;
			}
			
			this.redisService.set(key, jsonData, REDIS_TIME);
			
			return  JSON.parseObject(jsonData, ItemVo.class);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	
	/**
	 * 查询商品描述数据
	 * @param itemId
	 * @return
	 */
	public ItemDescription getItemDescriptionByItemId(Long itemId) {
		String url = SUNING_MANAGER_URL + "/api/item/description/" + itemId;
		try {
			String jsonData = apiService.doGet(url);
			if (StringUtils.isEmpty(jsonData)) {
				return null;
			}
			return  JSON.parseObject(jsonData, ItemDescription.class);
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}


	public String getItemParamDataByItemId(Long itemId) {
		String url = SUNING_MANAGER_URL + "/api/item/param/data/" + itemId;
		try {
			String jsonData = apiService.doGet(url);
			if (StringUtils.isEmpty(jsonData)) {
				return null;
			}
			ItemParamData itemParamData = JSON.parseObject(jsonData, ItemParamData.class);
			String paramData = itemParamData.getParamData();
			JSONArray jsonArray = JSON.parseArray(paramData);
			StringBuilder sb = new StringBuilder();
	            sb.append("<table cellpadding=\"0\" cellspacing=\"1\" width=\"100%\" border=\"0\" class=\"Ptable\"><tbody>");
	            for (int i = 0; i < jsonArray.size(); i++) {
	            	sb.append("<tr><th class=\"tdTitle\" colspan=\"2\">" + jsonArray.getJSONObject(i).get("group") + "</th></tr>");
	            	JSONArray array = jsonArray.getJSONObject(i).getJSONArray("params");
	            	for (int j = 0; j < array.size(); j++) {
	            		sb.append("<tr><td class=\"tdTitle\">" + array.getJSONObject(j).get("k") + "</td><td>"
	            				+ array.getJSONObject(j).get("v") + "</td></tr>");
					}
	            }
	            sb.append("</tbody></table>");
	            return sb.toString();
		} catch (IOException e) { 
			e.printStackTrace();
		}
		return null;
	}

}
