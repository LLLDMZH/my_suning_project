Date.prototype.format = function(format){ 
    var o =  { 
    "M+" : this.getMonth()+1, //month 
    "d+" : this.getDate(), //day 
    "h+" : this.getHours(), //hour 
    "m+" : this.getMinutes(), //minute 
    "s+" : this.getSeconds(), //second 
    "q+" : Math.floor((this.getMonth()+3)/3), //quarter 
    "S" : this.getMilliseconds() //millisecond 
    };
    if(/(y+)/.test(format)){ 
    	format = format.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length)); 
    }
    for(var k in o)  { 
	    if(new RegExp("("+ k +")").test(format)){ 
	    	format = format.replace(RegExp.$1, RegExp.$1.length==1 ? o[k] : ("00"+ o[k]).substr((""+ o[k]).length)); 
	    } 
    } 
    return format; 
};

var Suning = {
	// 编辑器参数
	kingEditorParams : {
		filePostName  : "uploadFile",
		uploadJson : '/picture/upload',
		dir : "image"	//类型
	},
	// 格式化时间
	formatDateTime : function(val,row){
		var now = new Date(val);
    	return now.format("yyyy-MM-dd hh:mm:ss");
	},
	// 格式化连接
	formatUrl : function(val,row){
		if(val){
			return "<a href='"+val+"' target='_blank'>查看</a>";			
		}
		return "";
	},
	// 格式化价格 分==>元
	formatPrice : function(val,row){
		return (val/100).toFixed(2);
	},
	// 格式化商品的状态
	formatItemStatus : function formatStatus(val,row){
        if (val == 1){
            return '正常';
        } else if(val == 2){
        	return '<span style="color:red;">下架</span>';
        } else {
        	return '未知';
        }
    },
    //页面加载后调用
    init : function(data){
    	//初始化图片上传组件
    	this.initPicUpload(data);
    	//初始化商品类目
    	this.initItemCat(data);
    },
    // 初始化图片上传组件
    initPicUpload : function(data){
    	$(".picFileUpload",data.dom).each(function(i,e){
    		var _ele = $(e);
    		//定义要显示图片的框架
    		_ele.siblings("div.pics").remove();
    		_ele.after('\
    			<div class="pics">\
        			<ul></ul>\
        		</div>');
    		
    		//有数据的话 直接显示 将取出来的图片地址按照,分割
        	if(data && data.pics){ 
        		var imgs = data.pics.split(",");
        		for(var i in imgs){
        			if($.trim(imgs[i]).length > 0){
        				_ele.siblings(".pics").find("ul").
        				append("<li><a href='"+imgs[i]+"' target='_blank'><img src='"+imgs[i]+"' width='80' height='50' /></a></li>");
        				
        			}
        		}
				
        	}
        	//添加绑定事件
        	$(e).unbind('click').click(function(){
        		//parentsUtil不包含本身父辈元素 而是他的直接子元素
        		var form = $(this).parentsUntil("form").parent("form");
        		//创建上传图片的界面
        		KindEditor.editor(Suning.kingEditorParams).loadPlugin('multiimage',function(){
        			var editor = this;
        			editor.plugin.multiImageDialog({
						clickFn : function(urlList) {//获取上传列表的数据
							var imgArray = [];
							
							KindEditor.each(urlList, function(i, data) {
								imgArray.push(data.url);//将url地址加入到字符串数组中
								
								form.find(".pics ul").append("<li><a href='"+data.url+"' target='_blank'>" +
										"<img src='"+data.url+"' width='80' height='50' /></a></li>");
							});
							//在表单中添加image这个值 用,分割
							form.find("[name=image]").val(imgArray.join(","));
							editor.hideDialog();
						}
					});
        		});
        	});
    	});
    },
    
    // 初始化选择类目组件
    initItemCat : function(data){
    	$(".selectItemCat").each(function(i,e){
    		//将dom对象转换成Jquery对象
    		var _ele = $(e);
    		//如果传入的data存在并且定义了就显示 否则就显示一个空的
    		if(data && data.cid){
    			// 加载类目名称
    			$.getJSON("/item/cats/" + data.cid, function(_data){
					data.cname = _data.itemName;
					_ele.after("<span style='margin-left:10px;'>"+data.cname+"</span>");
    			});
    		}else{
    			_ele.after("<span style='margin-left:10px;'></span>");
    		}
    		//解绑所有click事件 重新绑定一个
    		_ele.unbind('click').click(function(){
    			//创建一个div 
    			$("<div>").css({padding:"5px"}).html("<ul>")
    			.window({
    				width:'500',
    			    height:"450",
    			    modal:true,
    			    closed:true,
    			    iconCls:'icon-save',
    			    title:'选择类目',
    			    onOpen : function(){
    			    	//打开窗口时的动作
    			    	//获取div对象
    			    	var _win = this;
    			    	//这个div下的ul
    			    	$("ul",_win).tree({
    			    		url : '/item/cats',
    			    		animate : true,
    			    		method : "GET",
    			    		onClick : function(node){
    			    			//如果选择的是最底层的类目的话
    			    			if($(this).tree("isLeaf",node.target)){
    			    				//从a找到td
    			    				_ele.parent().find("[name=cid]").val(node.id);//隐藏input设置商品id
    			    				_ele.next().text(node.text).attr("cid",node.id);//当前Jquery对象的next设置文本和属性
    			    				$(_win).window('close');
    			    				if(data && data.Function){//undefined也是false
    			    					//传入一个function this是传入的this对象
    			    					data.Function.call(this,node);
    			    				}
    			    			}
    			    		}
    			    	});
    			    },
    			    onClose : function(){
    			    	$(this).window("destroy");
    			    }
    			}).window('open');
    		});
    	});
    },
    
    createEditor : function(select){
    	return KindEditor.create(select, Suning.kingEditorParams);
    },
    
    /**
     * 创建一个窗口，关闭窗口后销毁该窗口对象。<br/>
     * 
     * 默认：<br/>
     * width : 80% <br/>
     * height : 80% <br/>
     * title : (空字符串) <br/>
     * 
     * 参数：<br/>
     * width : <br/>
     * height : <br/>
     * title : <br/>
     * url : 必填参数 <br/>
     * onLoad : function 加载完窗口内容后执行<br/>
     * 
     * 
     */
    createWindow : function(params){
    	$("<div>").css({padding:"5px"}).window({
    		width : params.width?params.width:"80%",
    		height : params.height?params.height:"80%",
    		modal:true,
    		title : params.title?params.title:" ",
    		href : params.url,
		    onClose : function(){
		    	$(this).window("destroy");
		    },
		    onLoad : function(){
		    	if(params.onLoad){
		    		params.onLoad.call(this);
		    	}
		    }
    	}).window("open");
    },
    
    closeCurrentWindow : function(){
    	$(".panel-tool-close").click();
    },
    
    changeItemParam : function(node,formId){
  	  $.ajax({
		   type: "GET",
		   url: "/item/param/template/" + node.id,
		   statusCode : {
			   200 : function(data) {
				   //指定form下的 商品规格的 tr显示
					 $("#"+formId+" .params").show();
					 //解析为json对象
					 var paramData = JSON.parse(data.paramData);
					 var html = "<ul>";
					 for(var i in paramData){
						 var pd = paramData[i];
						 html+="<li><table>";
						 html+="<tr><td colspan=\"2\" class=\"group\">"+pd.group+"</td></tr>";
						 
						 for(var j in pd.params){
							 var ps = pd.params[j];
							 html+="<tr><td class=\"param\"><span>"+ps+"</span>: </td><td><input autocomplete=\"off\" type=\"text\"/></td></tr>";
						 }
						 
						 html+="</li></table>";
					 }
					 html+= "</ul>";
					 $("#"+formId+" .params td").eq(1).html(html);
			   },
			   404 : function() {
				   $("#"+formId+" .params").hide();
					 $("#"+formId+" .params td").eq(1).empty();
			   },
			   500 : function() {
				   $.messager.alert('错误','创建失败!','error');
			   }
		   }
		});
    },
    
    getSelectionsIds : function (select){
    	var list = $(select);
    	var sels = list.datagrid("getSelections");
    	var ids = [];
    	for(var i in sels){
    		ids.push(sels[i].id);
    	}
    	ids = ids.join(",");
    	return ids;
    },
    
    /**
     * 初始化单图片上传组件 <br/>
     * 选择器为：.onePicUpload <br/>
     * 上传完成后会设置input内容以及在input后面追加<img> 
     */
    initOnePicUpload : function(){
    	$(".onePicUpload").click(function(){
			var _self = $(this);
			KindEditor.editor(Suning.kingEditorParams).loadPlugin('image', function() {
				this.plugin.imageDialog({
					showRemote : false,
					clickFn : function(url, title, width, height, border, align) {
						var input = _self.siblings("input");
						input.parent().find("img").remove();
						input.val(url);
						input.after("<a href='"+url+"' target='_blank'><img src='"+url+"' width='80' height='50'/></a>");
						this.hideDialog();
					}
				});
			});
		});
    }
};
